[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\rajra\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\rajra\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.5 (Oracle Corporation Java 22.0.2)
[debug] Load.defaultLoad until apply took 216.5514ms
[debug]           Load.loadUnit: plugins took 176.1618ms
[debug]           Load.loadUnit: defsScala took 3.9322ms
[debug] [Loading] Scanning directory D:\GWU_World\Practice\project
[debug]             Load.loadUnit: mkEval took 11.4202ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\GWU_World\Practice\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.2177 ms
[info] loading settings for project practice-build from idea.sbt ...
[debug]               Load.resolveProject(practice-build) took 59.5948ms
[debug]             Load.loadTransitive: finalizeProject(Project(id practice-build, base: D:\GWU_World\Practice\project, plugins: List(<none>))) took 93.831ms
[debug] [Loading] Done in D:\GWU_World\Practice\project, returning: (practice-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5677.2359ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.7823ms
[debug]         Load.loadUnit(file:/D:/GWU_World/Practice/project/, ...) took 5888.8905ms
[debug]       Load.apply: load took 6105.8265ms
[debug]       Load.apply: resolveProjects took 5.9557ms
[debug]       Load.apply: finalTransforms took 71.244ms
[debug]       Load.apply: config.delegates took 9.9929ms
[debug]       Load.apply: Def.make(settings)... took 571.816ms
[debug]       Load.apply: structureIndex took 163.1654ms
[debug]       Load.apply: mkStreams took 3.1053ms
[info] loading project definition from D:\GWU_World\Practice\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 10263.3283ms
[debug]     Load.loadUnit: defsScala took 0.0063ms
[debug] [Loading] Scanning directory D:\GWU_World\Practice
[debug]       Load.loadUnit: mkEval took 0.2711ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.1371 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 36.6971ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\GWU_World\Practice, plugins: List(<none>))) took 41.2701ms
[debug] [Loading] Done in D:\GWU_World\Practice, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1720.7251ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.0212ms
[debug]   Load.loadUnit(file:/D:/GWU_World/Practice/, ...) took 11996.2854ms
[debug] Load.apply: load took 12029.0652ms
[debug] Load.apply: resolveProjects took 0.26ms
[debug] Load.apply: finalTransforms took 42.8375ms
[debug] Load.apply: config.delegates took 0.6764ms
[debug] Load.apply: Def.make(settings)... took 130.9502ms
[debug] Load.apply: structureIndex took 82.2733ms
[debug] Load.apply: mkStreams took 0.0031ms
[info] set current project to SimpleSbtProject (in build file:/D:/GWU_World/Practice/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
